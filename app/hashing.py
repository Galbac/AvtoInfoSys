#app/hashing.py
import hashlib
from pathlib import Path
from typing import Optional, Tuple
from app.logger import get_logger

logger = get_logger()

def get_file_info(file_path: Path) -> Optional[Tuple[float, int]]:
    """
    üîπ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (mtime, size) —Ñ–∞–π–ª–∞.
    –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ, –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–µ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.
    """
    try:
        stat = file_path.stat()
        return float(stat.st_mtime), int(stat.st_size)
    except (OSError, ValueError, PermissionError) as e:
        logger.debug(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {file_path} | {e}")
        return None

def calculate_hash(file_path: Path) -> Optional[str]:
    """
    üîπ –í—ã—á–∏—Å–ª—è–µ—Ç SHA-256 —Ö–µ—à —Ñ–∞–π–ª–∞.
    - –ë–ª–æ–∫–∏ –ø–æ 64 –ö–ë
    - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–æ—Å—Ç—É–ø–∞
    - –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ/–Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã
    """
    if not file_path.exists() or not file_path.is_file():
        return None
    hasher = hashlib.sha256()
    try:
        with file_path.open("rb") as f:
            for chunk in iter(lambda: f.read(65536), b""):
                hasher.update(chunk)
        return hasher.hexdigest()
    except (PermissionError, OSError) as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É (–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω): {file_path} | {e}")
        return None
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}")
        return None